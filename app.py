import requests, argparse, json

vendor = "" #input("Enter vendor to search: ")
product = "" #input("Enter vendor's product to search: ")
SEARCH = "search/{}/{}".format(vendor, product)



def search(check_vendor, check_product):
    vendor = check_vendor
    product = check_product
    SEARCH = "search/{}/{}".format(vendor, product)
    BASE_URL = "https://cve.circl.lu/api/{}".format(SEARCH)
    print(BASE_URL)
    test = {}
    r = requests.get(url=BASE_URL)

    for each in r.json():
        d = {each['id']:[each["summary"], each["cvss"]]}
        test.update(d)

    print(test)

def browse(check_vendor):
    vendor = check_vendor
    BROWSE = "{}".format(vendor)
    BASE_URL = "https://cve.circl.lu/api/browse/{}".format(BROWSE)
    test = []
    r = requests.get(url=BASE_URL)

    for each in r.json()["product"]:
        if each not in test:
            test.append(each)
    print(test)

def parse_args():
    description = ""
    parser = argparse.ArgumentParser(description=description)
    parser.add_argument("-s", "--search", action="store_true", help="Requires -v and -p")
    parser.add_argument("-p", "--product", action="store", help="Enter Product name")
    parser.add_argument("-v", "--vendor", action="store", help="Enter vendor")
    parser.add_argument("-b", "--browse", action="store_true", help="Requires -v")
    args = parser.parse_args()
    return args

if __name__== "__main__":
    args = parse_args()
    if args.search:
        search(args.vendor, args.product)

    if args.browse:
        browse(args.vendor)
